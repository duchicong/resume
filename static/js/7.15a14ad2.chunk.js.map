{"version":3,"sources":["assets/styles/_variables.scss","components/FormGroups/TextareaElip/TextareaElip.scss","views/ContactMe/ContactMe.scss","components/FormGroups/TextareaElip/index.js","components/FormGroups/InputElip/index.js","components/FormGroups/ButtonElip/index.js","views/ContactMe/index.js"],"names":["module","exports","TextareaElip","option","className","CssTextField","withStyles","root","color","borderBottomColor","borderRadius","borderColor","variables","softOrange","TextField","InputElip","variant","size","CssButton","theme","height","backgroundColor","fontWeight","minWidth","blueGrey","Button","ButtonElip","children","Alert","props","elevation","ContactMe","user","useContext","LayoutContext","habits","schema","yourName","required","minLength","maxLength","email","subject","message","useState","openSnackbar","loading","severity","state","setState","initalFormState","values","isValid","touched","errors","formState","setFormState","checkValidity","value","rules","name","regexEmail","trim","undefined","length","validEmail","test","String","toLowerCase","onChangeHandler","event","preventDefault","nameFormState","target","formValidation","Object","keys","hasError","key","validationError","React","useEffect","ContactInfoRender","icon","PhoneInTalkOutlinedIcon","title","content","phone","EmailOutlinedIcon","RoomOutlinedIcon","address","map","info","habitsRender","habit","Icon","classes","Typography","align","checkDisabled","item","includes","id","Container","maxWidth","Grid","container","spacing","sm","md","xs","placeholder","onChange","FormHelperText","error","onClick","e","axios","post","service_id","process","template_id","user_id","template_params","then","catch","disabled","CircularProgress","Snackbar","open","onClose"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,wBAA0B,UAAU,MAAQ,OAAO,YAAc,UAAU,IAAM,MAAM,WAAa,UAAU,2BAA6B,Y,oBCA7JD,EAAOC,QAAU,CAAC,wBAA0B,UAAU,MAAQ,OAAO,YAAc,UAAU,IAAM,MAAM,WAAa,UAAU,2BAA6B,Y,oBCA7JD,EAAOC,QAAU,CAAC,wBAA0B,UAAU,MAAQ,OAAO,YAAc,UAAU,IAAM,MAAM,WAAa,UAAU,2BAA6B,Y,4OCe9IC,G,OAZM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrB,OACE,yBAAKC,UAAU,iBACb,6BAAcD,M,kCCDdE,EAAeC,YAAW,CAC9BC,KAAM,CACJ,uBAAwB,CACtBC,MAAO,SAET,sBAAuB,CACrBA,MAAO,SAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1BC,aAAc,GAEd,aAAc,CACZC,YAAaC,IAAUC,YAEzB,mBAAoB,CAClBF,YAAaC,IAAUC,YAEzB,yBAA0B,CACxBF,YAAa,YArBAL,CAyBlBQ,KAUYC,EARG,SAAC,GAAc,IAAbZ,EAAY,EAAZA,OAClB,OAAO,kBAACE,EAAD,iBAAkBF,EAAlB,CAA0Ba,QAAQ,WAAWC,KAAK,Y,kBC5BrDC,EAAYZ,aAAW,SAACa,GAAD,MAAY,CACvCZ,KAAM,CACJG,aAAc,OACdU,OAAQ,OACRC,gBAAiB,UACjBb,MAAO,OACPc,WAAY,MACZC,SAAU,IAEV,UAAW,CACTF,gBAAiBG,IAAS,UAVdlB,CAadmB,KAWWC,EATI,SAAC,GAAwB,IAAvBvB,EAAsB,EAAtBA,OAAQwB,EAAc,EAAdA,SAC3B,OAAO,kBAACT,EAAcf,EAASwB,I,OCTjC,SAASC,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGd,QAAQ,UAAaa,IAkRvCE,UA/QG,WAChB,IACOC,EADSC,qBAAWC,KACpBF,KACAG,EAAUH,EAAVG,OACDC,EAAS,CACbC,SAAU,CACRC,UAAU,EACVC,UAAW,EACXC,UAAW,KAEbC,MAAO,CACLH,UAAU,EACVG,OAAO,EACPD,UAAW,KAEbE,QAAS,CACPJ,UAAU,EACVC,UAAW,EACXC,UAAW,KAEbG,QAAS,CACPL,UAAU,EACVC,UAAW,EACXC,UAAW,MAvBO,EA2BII,mBAAS,CACjCC,cAAc,EACdC,SAAS,EACTC,SAAU,UACVJ,QAAS,+BA/BW,mBA2BfK,EA3Be,KA2BRC,EA3BQ,KAiChBC,EAAkB,CACtBC,OAAQ,KACRC,SAAS,EACTC,QAAS,KACTC,OAAQ,IArCY,EAuCYV,mBAASM,GAvCrB,mBAuCfK,EAvCe,KAuCJC,EAvCI,KAyChBC,EAAgB,SAACC,EAAOC,GAAwB,IAAjBC,EAAgB,uDAAT,KAC1C,IAAKD,EAAO,OAAO,KACnB,IAEME,EAAa,0JAEnB,WAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAOrB,WACkB,KAAjBoB,EAAMI,OACH,MAAM,GAAN,OAAUF,EAAV,gBAGf,QAAwBG,IAApBJ,EAAMpB,WAA2BoB,EAAMpB,WAC/BmB,EAAMM,OAASL,EAAMpB,UAClB,MAAM,GAAN,OAAUqB,EAAV,mBAAyBD,EAAMpB,WAG9C,QAAwBwB,IAApBJ,EAAMnB,WAA2BmB,EAAMnB,WAC/BkB,EAAMM,OAASL,EAAMnB,UAClB,MAAM,GAAN,OAAUoB,EAAV,mBAAyBD,EAAMnB,WAG9C,GAAImB,EAAMlB,MAAO,CACf,IAAMwB,EAAaJ,EAAWK,KAAKC,OAAOT,EAAMI,QAAQM,eACxD,IAAKH,EAAY,MAAM,GAAN,OAAUL,EAAV,mBAIfS,EAAkB,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAgBF,EAAMG,OAAOb,KAC7Bc,EAAc,2BACfnB,GADe,IAElBD,OAAO,2BACFC,EAAUD,QADT,kBAEHkB,EAAgBf,EAAca,EAAMG,OAAOf,MAAOtB,EAAOoC,GAAgBA,OAI9EhB,EAAa,2BACRD,GADO,IAEVJ,OAAO,2BACFI,EAAUJ,QADT,kBAEHqB,EAAgBF,EAAMG,OAAOf,MAAMI,SAEtCT,QAAQ,2BACHE,EAAUF,SADR,kBAEJmB,GAAgB,IAEnBlB,OAAQoB,EAAepB,OACvBF,SAAUuB,OAAOC,KAAKF,EAAepB,QAAQU,OAAS,MAIpDa,EAAW,SAACC,GAChB,OAAKvB,EAAUD,QAAWC,EAAUD,OAAOwB,GAC/BA,KAAOvB,EAAUD,OAD2B,MAIpDyB,EAAkB,SAACD,GACvB,OAAKvB,EAAUD,QAAWC,EAAUD,OAAOwB,IAC/BA,KAAOvB,EAAUD,OAASC,EAAUD,OAAOwB,GADC,MAI1DE,IAAMC,WAAU,WACd,GAAI1B,EAAUD,OAAQ,CAAC,IACdA,EAAUC,EAAVD,OACP,IAAK,IAAIM,KAAQN,OACMS,IAAjBT,EAAOM,YACFN,EAAOM,GACdJ,EAAa,2BACRD,GADO,IAEVD,OAAQA,GAAU,YAKzB,CAACC,IAEJ,IAqCM2B,EANkB,CACtB,CAACC,KAAMC,IAAyBC,MAAO,QAASC,QAAStD,EAAKuD,OAC9D,CAACJ,KAAMK,IAAmBH,MAAO,QAASC,QAAStD,EAAKS,OACxD,CAAC0C,KAAMM,IAAkBJ,MAAO,UAAWC,QAAStD,EAAK0D,UAGjBC,KAAI,SAACC,GAAD,OAAU,kBAAC,IAAD,CAAad,IAAKc,EAAKP,MAAOO,KAAMA,OACtFC,EAAe1D,EAAOwD,KAAI,SAACG,GAC/B,IAAMC,EAAOD,EAAMX,KACnB,OACE,yBAAKL,IAAKgB,EAAMT,MAAOjF,UAAU,6CAC/B,yBAAKA,UAAU,oCACb,kBAAC2F,EAAD,CAAMC,QAAS,CAACzF,KAAM,qBAAsBC,MAAM,YAClD,kBAACyF,EAAA,EAAD,CAAYC,MAAM,UAAUJ,EAAMT,YAMpCc,EAAgB,WACpB,GAAyB,OAArB5C,EAAUJ,QAAmBwB,OAAOC,KAAKrB,EAAUD,QAAQU,OAAS,EAAG,OAAO,EAMlF,MALc,CAAC,WAAY,QAAS,UAAW,WACxB2B,KAAI,SAACS,GAC1B,YAA+BrC,IAA3BR,EAAUJ,OAAOiD,IAAkD,KAA3B7C,EAAUJ,OAAOiD,MAG/CC,UAAS,IAG3B,OACE,yBAAKC,GAAG,aAAalG,UAAU,wBAC7B,kBAACmG,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,IAAD,qBACA,kBAAC,IAAD,CAAOpF,OAAQ,KACf,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,gBACb,kBAACqG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAML,MAAI,EAACQ,GAAI,GAAIC,GAAI,GACpB3B,GAEH,kBAACuB,EAAA,EAAD,CAAML,MAAI,EAACQ,GAAI,GAAIC,GAAI,EAAGzG,UAAU,iBAClC,kBAACqG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAML,MAAI,EAACU,GAAI,GAAIF,GAAI,EAAGC,GAAI,GAC5B,kBAAC,EAAD,CACE1G,OAAQ,CACNC,UAAW,cACXwD,KAAM,WACNtB,UAAU,EACVyE,YAAa,YACbC,SAAU3C,KAGd,kBAAC4C,EAAA,EAAD,CAAgBC,MAAOrC,EAAS,aAAcE,EAAgB,cAEhE,kBAAC0B,EAAA,EAAD,CAAML,MAAI,EAACU,GAAI,GAAIF,GAAI,EAAGC,GAAI,GAC5B,kBAAC,EAAD,CACE1G,OAAQ,CACNC,UAAW,gCACXwD,KAAM,QACNtB,UAAU,EACVyE,YAAa,gBACbC,SAAU3C,KAGd,kBAAC4C,EAAA,EAAD,CAAgBC,MAAOrC,EAAS,UAAWE,EAAgB,YAG/D,kBAAC,EAAD,CACE5E,OAAQ,CACNC,UAAW,+CACXwD,KAAM,UACNtB,UAAU,EACVyE,YAAa,UACbC,SAAU3C,KAGd,kBAAC4C,EAAA,EAAD,CAAgBC,MAAOrC,EAAS,YAAaE,EAAgB,YAC7D,kBAAC,EAAD,CACE5E,OAAQ,CACNC,UAAW,+CACXwD,KAAM,UACNtB,UAAU,EACVyE,YAAa,YACbC,SAAU3C,KAGd,kBAAC4C,EAAA,EAAD,CAAgBC,MAAOrC,EAAS,YAAaE,EAAgB,YAC7D,yBAAK3E,UAAU,yBACb,kBAAC,EAAD,CACED,OAAQ,CACNK,MAAO,UACP2G,QA1HF,SAACC,GACjBA,EAAE7C,iBACFtB,EAAS,2BACJD,GADG,IAENF,SAAS,KAEXuE,IACGC,KAAK,8CAA+C,CACnDC,WAAYC,QACZC,YAAaD,mBACbE,QAASF,6BACTG,gBAAiBpE,EAAUJ,SAE5ByE,MAAK,WACJ3E,EAAS,2BACJD,GADG,IAENF,SAAS,EACTD,cAAc,KAEhBW,EAAaN,MAEd2E,OAAM,WACL5E,EAAS,2BACJD,GADG,IAENF,SAAS,EACTD,cAAc,EACdE,SAAU,QACVJ,QAAS,6BAgGGqD,QAAS,CAACzF,KAAM4F,IAAkB,GAAK,4CACvC2B,SAAU3B,MALd,gBAUCnD,EAAMF,SAAW,kBAACiF,EAAA,EAAD,CAAkB9G,KAAM,GAAIb,UAAU,uBAKhE,kBAAC,IAAD,CAAOgB,OAAQ,KACf,yBAAKhB,UAAU,uBAAuByF,GACtC,kBAAC,IAAD,CAAOzE,OAAQ,OAGnB,kBAAC4G,EAAA,EAAD,CACEC,KAAMjF,EAAMH,aACZqF,QAAS,kBAAMjF,EAAS,2BAAID,GAAL,IAAYH,cAAc,MACjDzC,UAAU,eAEV,kBAAC,EAAD,CAAO8H,QAAS,kBAAMjF,EAAS,2BAAID,GAAL,IAAYH,cAAc,MAASE,SAAUC,EAAMD,UAC9EC,EAAML","file":"static/js/7.15a14ad2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"veryDarkDesaturatedBlue\":\"#353352\",\"white\":\"#fff\",\"moderateRed\":\"#c4475f\",\"red\":\"red\",\"softOrange\":\"#f9ae56\",\"very_dark_desaturated_blue\":\"#302f4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"veryDarkDesaturatedBlue\":\"#353352\",\"white\":\"#fff\",\"moderateRed\":\"#c4475f\",\"red\":\"red\",\"softOrange\":\"#f9ae56\",\"very_dark_desaturated_blue\":\"#302f4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"veryDarkDesaturatedBlue\":\"#353352\",\"white\":\"#fff\",\"moderateRed\":\"#c4475f\",\"red\":\"red\",\"softOrange\":\"#f9ae56\",\"very_dark_desaturated_blue\":\"#302f4e\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './TextareaElip.scss'\n\nconst TextareaElip = ({option}) => {\n  return (\n    <div className=\"Textarea-Elip\">\n      <textarea {...option} />\n    </div>\n  )\n}\n\nTextareaElip.propTypes = {\n  option: PropTypes.object,\n}\n\nexport default TextareaElip\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {withStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport variables from '../../../assets/styles/_variables.scss'\n\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiInputBase-root': {\n      color: 'white',\n    },\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      borderRadius: 20,\n\n      '& fieldset': {\n        borderColor: variables.softOrange,\n      },\n      '&:hover fieldset': {\n        borderColor: variables.softOrange,\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField)\n\nconst InputElip = ({option}) => {\n  return <CssTextField {...option} variant=\"outlined\" size=\"small\" />\n}\n\nInputElip.propTypes = {\n  option: PropTypes.object,\n}\n\nexport default InputElip\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {withStyles} from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport {blueGrey} from '@material-ui/core/colors'\n\nconst CssButton = withStyles((theme) => ({\n  root: {\n    borderRadius: '45px',\n    height: '45px',\n    backgroundColor: '#f51457',\n    color: '#fff',\n    fontWeight: '600',\n    minWidth: 200,\n\n    '&:hover': {\n      backgroundColor: blueGrey[800],\n    },\n  },\n}))(Button)\n\nconst ButtonElip = ({option, children}) => {\n  return <CssButton {...option}>{children}</CssButton>\n}\n\nButtonElip.propTypes = {\n  option: PropTypes.object,\n  children: PropTypes.node,\n}\n\nexport default ButtonElip\n","import React, {useContext, useState} from 'react'\nimport axios from 'axios'\nimport {Grid, Container, FormHelperText, Snackbar, Typography} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport PhoneInTalkOutlinedIcon from '@material-ui/icons/PhoneInTalkOutlined'\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined'\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined'\nimport {Title, Space, ContactInfo} from '../../components'\nimport LayoutContext from '../../store/providers/resume'\nimport {TextareaElip, ButtonElip, InputElip} from '../../components/FormGroups'\nimport './ContactMe.scss'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nconst ContactMe = () => {\n  const context = useContext(LayoutContext)\n  const {user} = context\n  const {habits} = user\n  const schema = {\n    yourName: {\n      required: true,\n      minLength: 3,\n      maxLength: 120,\n    },\n    email: {\n      required: true,\n      email: true,\n      maxLength: 120,\n    },\n    subject: {\n      required: true,\n      minLength: 3,\n      maxLength: 120,\n    },\n    message: {\n      required: true,\n      minLength: 3,\n      maxLength: 500,\n    },\n  }\n\n  const [state, setState] = useState({\n    openSnackbar: false,\n    loading: false,\n    severity: 'success',\n    message: 'Send mail is successfully!',\n  })\n  const initalFormState = {\n    values: null,\n    isValid: true,\n    touched: null,\n    errors: {},\n  }\n  const [formState, setFormState] = useState(initalFormState)\n\n  const checkValidity = (value, rules, name = null) => {\n    if (!rules) return null\n    let isValid = false\n    // eslint-disable-next-line\n    const regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n    if (rules?.required) {\n      isValid = value.trim() === ''\n      if (isValid) return `${name} is required`\n    }\n\n    if (rules.minLength !== undefined && rules.minLength) {\n      isValid = value.length < rules.minLength\n      if (isValid) return `${name} is min ${rules.minLength}`\n    }\n\n    if (rules.maxLength !== undefined && rules.maxLength) {\n      isValid = value.length > rules.maxLength\n      if (isValid) return `${name} is max ${rules.maxLength}`\n    }\n\n    if (rules.email) {\n      const validEmail = regexEmail.test(String(value.trim()).toLowerCase())\n      if (!validEmail) return `${name} is not email`\n    }\n  }\n\n  const onChangeHandler = (event) => {\n    event.preventDefault()\n    const nameFormState = event.target.name\n    const formValidation = {\n      ...formState,\n      errors: {\n        ...formState.errors,\n        [nameFormState]: checkValidity(event.target.value, schema[nameFormState], nameFormState),\n      },\n    }\n\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [nameFormState]: event.target.value.trim(),\n      },\n      touched: {\n        ...formState.touched,\n        [nameFormState]: true,\n      },\n      errors: formValidation.errors,\n      isValid: !Object.keys(formValidation.errors).length > 0,\n    })\n  }\n\n  const hasError = (key) => {\n    if (!formState.errors || !formState.errors[key]) return null\n    else return key in formState.errors ? true : false\n  }\n\n  const validationError = (key) => {\n    if (!formState.errors || !formState.errors[key]) return null\n    else return key in formState.errors ? formState.errors[key] : null\n  }\n\n  React.useEffect(() => {\n    if (formState.errors) {\n      const {errors} = formState\n      for (let name in errors) {\n        if (errors[name] === undefined) {\n          delete errors[name]\n          setFormState({\n            ...formState,\n            errors: errors || null,\n          })\n        }\n      }\n    }\n  }, [formState])\n\n  const sendEmail = (e) => {\n    e.preventDefault()\n    setState({\n      ...state,\n      loading: true,\n    })\n    axios\n      .post('https://api.emailjs.com/api/v1.0/email/send', {\n        service_id: process.env.REACT_APP_SERVICE_ID,\n        template_id: process.env.REACT_APP_TEMPLATE_ID,\n        user_id: process.env.REACT_APP_USER_ID,\n        template_params: formState.values,\n      })\n      .then(() => {\n        setState({\n          ...state,\n          loading: false,\n          openSnackbar: true,\n        })\n        setFormState(initalFormState)\n      })\n      .catch(() => {\n        setState({\n          ...state,\n          loading: false,\n          openSnackbar: true,\n          severity: 'error',\n          message: 'Send mail is error!',\n        })\n      })\n  }\n  const contactInfoData = [\n    {icon: PhoneInTalkOutlinedIcon, title: 'Phone', content: user.phone},\n    {icon: EmailOutlinedIcon, title: 'Email', content: user.email},\n    {icon: RoomOutlinedIcon, title: 'Address', content: user.address},\n  ]\n\n  const ContactInfoRender = contactInfoData.map((info) => <ContactInfo key={info.title} info={info} />)\n  const habitsRender = habits.map((habit) => {\n    const Icon = habit.icon\n    return (\n      <div key={habit.title} className=\"habits__item flex flex--column margin--16\">\n        <div className=\"habits__item--round text--center\">\n          <Icon classes={{root: 'color--softOrange'}} color=\"primary\" />\n          <Typography align=\"center\">{habit.title}</Typography>\n        </div>\n      </div>\n    )\n  })\n\n  const checkDisabled = () => {\n    if (formState.values === null || Object.keys(formState.errors).length > 0) return true\n    const names = ['yourName', 'email', 'subject', 'message']\n    const isValids = names.map((item) => {\n      if (formState.values[item] === undefined || formState.values[item] === '') return true\n      return false\n    })\n    return isValids.includes(true)\n  }\n\n  return (\n    <div id=\"Contact-Me\" className=\"Contact page-section\">\n      <Container maxWidth=\"md\">\n        <Title>Get In Touch</Title>\n        <Space height={30} />\n        <div className=\"wrapper\">\n          <div className=\"flex-grow--1\">\n            <Grid container spacing={3}>\n              <Grid item sm={12} md={4}>\n                {ContactInfoRender}\n              </Grid>\n              <Grid item sm={12} md={8} className=\"Contact__form\">\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6} md={6}>\n                    <InputElip\n                      option={{\n                        className: 'full--width',\n                        name: 'yourName',\n                        required: true,\n                        placeholder: 'Your Name',\n                        onChange: onChangeHandler,\n                      }}\n                    />\n                    <FormHelperText error={hasError('yourName')}>{validationError('yourName')}</FormHelperText>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6}>\n                    <InputElip\n                      option={{\n                        className: 'full--width margin--bottom--6',\n                        name: 'email',\n                        required: true,\n                        placeholder: 'Email address',\n                        onChange: onChangeHandler,\n                      }}\n                    />\n                    <FormHelperText error={hasError('email')}>{validationError('email')}</FormHelperText>\n                  </Grid>\n                </Grid>\n                <InputElip\n                  option={{\n                    className: 'full--width margin--top--6 margin--bottom--6',\n                    name: 'subject',\n                    required: true,\n                    placeholder: 'Subject',\n                    onChange: onChangeHandler,\n                  }}\n                />\n                <FormHelperText error={hasError('subject')}>{validationError('subject')}</FormHelperText>\n                <TextareaElip\n                  option={{\n                    className: 'bg--inherit margin--top--6 margin--bottom--6',\n                    name: 'message',\n                    required: false,\n                    placeholder: 'Message..',\n                    onChange: onChangeHandler,\n                  }}\n                />\n                <FormHelperText error={hasError('message')}>{validationError('message')}</FormHelperText>\n                <div className=\"Contact__form--button\">\n                  <ButtonElip\n                    option={{\n                      color: 'primary',\n                      onClick: sendEmail,\n                      classes: {root: checkDisabled() ? '' : 'bg--white color--veryDarkDesaturatedBlue'},\n                      disabled: checkDisabled(),\n                    }}\n                  >\n                    Send Message\n                  </ButtonElip>\n                  {state.loading && <CircularProgress size={24} className=\"buttonProgress\" />}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n          <Space height={30} />\n          <div className=\"habits text--center\">{habitsRender}</div>\n          <Space height={30} />\n        </div>\n      </Container>\n      <Snackbar\n        open={state.openSnackbar}\n        onClose={() => setState({...state, openSnackbar: true})}\n        className=\"MuiSnackbar\"\n      >\n        <Alert onClose={() => setState({...state, openSnackbar: false})} severity={state.severity}>\n          {state.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}\n\nexport default ContactMe\n"],"sourceRoot":""}