{"version":3,"sources":["assets/styles/_variables.scss","views/RecentWork/Post.js","components/Dialogs/DialogSizes.js","views/RecentWork/DialogPost.js","views/RecentWork/index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","borderRadius","transition","border","colors","softOrange","breakpoints","down","margin","MuiCardActionArea","position","height","MuiCardMedia","width","left","top","Post","props","image","title","onOpen","classes","className","Card","CardActionArea","onClick","CardMedia","alt","CardContent","Typography","gutterBottom","variant","component","DialogSizes","open","onClose","fullWidth","children","disabledTitle","titleProps","disabledAction","actionProps","rest","classRoles","action","actionClose","actionAccept","content","dialogTitleRender","DialogTitle","id","dialogActionRender","DialogActions","Button","color","ref","React","createRef","Dialog","DialogContent","defaultProps","memo","backgroundColor","veryDarkDesaturatedBlue","white","boxShadow","MuiDialogSizes","overflow","MuiIconButton","right","padding","MuiChip","fontSize","fontWeight","moderateRed","MuiTypography","display","alignItems","DialogPost","source","body","technical","due_date","positions","positionsRender","map","Chip","key","label","sourceRender","Link","href","link","target","rel","name","actionDialogRender","IconButton","htmlColor","h5","align","TabPanel","value","index","other","role","hidden","aria-labelledby","Box","p","Container","minHeight","MuiTab","RecentWork","useState","state","setState","projects","setProjects","handleChange","useCallback","event","prevState","onOpenHandler","newState","onCloseHandler","useEffect","mounted","axios","get","then","res","data","works","examples","project","type","push","listTabsRender","tab","Tab","wrapper","clsx","listProjectsRender","Grid","item","xs","sm","md","listWorks","length","listExamples","Tabs","onChange","scrollButtons","indicator","container","spacing"],"mappings":"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","file":"static/js/9.e1b8b22f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"veryDarkDesaturatedBlue\":\"#353352\",\"white\":\"#fff\",\"moderateRed\":\"#c4475f\",\"red\":\"red\",\"softOrange\":\"#f9ae56\",\"very_dark_desaturated_blue\":\"#302f4e\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Card, CardActionArea, CardContent, CardMedia, Typography} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\nimport colors from '../../assets/styles/_variables.scss'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    borderRadius: '16px',\n    transition: '0.5s',\n    border: '2px solid #fff',\n\n    '&:hover': {\n      borderRadius: 0,\n      border: '2px solid ' + colors.softOrange,\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      margin: '0 auto',\n    },\n  },\n  MuiCardActionArea: {\n    position: 'relative',\n    height: 200,\n  },\n  MuiCardMedia: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    left: 0,\n    top: 0,\n  },\n}))\nconst Post = (props) => {\n  const {image, title, onOpen} = props\n  const classes = useStyles()\n\n  return (\n    <div className=\"Post\">\n      <Card className={classes.root}>\n        <CardActionArea onClick={onOpen} className={classes.MuiCardActionArea}>\n          <CardMedia alt={title} image={image} className={classes.MuiCardMedia} title={title} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"h3\">\n              {title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  technical: PropTypes.string,\n  due_date: PropTypes.string,\n  positions: PropTypes.array,\n}\n\nexport default Post\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core'\n\nconst DialogSizes = (props) => {\n  const {\n    open,\n    onClose,\n    onClick,\n    classes,\n    fullWidth,\n    maxWidth,\n    children,\n    disabledTitle,\n    titleProps,\n    disabledAction,\n    actionProps,\n    title,\n    ...rest\n  } = props\n  const classRoles = {\n    title: {},\n    action: {},\n    actionClose: {},\n    actionAccept: {},\n    content: {},\n    ...classes,\n  }\n\n  const dialogTitleRender = !disabledTitle && (\n    <DialogTitle id=\"max-width-dialog-title\" classes={classRoles.title}>\n      {title}\n    </DialogTitle>\n  )\n  const dialogActionRender = !disabledAction && (\n    <DialogActions classes={classRoles.action}>\n      <Button onClick={onClose} classes={classRoles.actionClose}>\n        Close\n      </Button>\n      <Button onClick={onClick} color=\"primary\" classes={classRoles.actionAccept}>\n        Accept\n      </Button>\n    </DialogActions>\n  )\n\n  const ref = React.createRef()\n  return (\n    <Dialog ref={ref} fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={onClose} {...rest}>\n      {titleProps || dialogTitleRender}\n      <DialogContent classes={classRoles.content}>\n        <>{children}</>\n      </DialogContent>\n      {actionProps || dialogActionRender}\n    </Dialog>\n  )\n}\n\nDialogSizes.defaultProps = {\n  open: false,\n  disabledAction: false,\n  disabledTitle: false,\n  fullWidth: false,\n  title: 'This is title',\n  maxWidth: 'sm',\n}\n\nDialogSizes.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onClick: PropTypes.bool,\n  disabledAction: PropTypes.bool,\n  disabledTitle: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  title: PropTypes.string,\n  classes: PropTypes.object,\n  maxWidth: PropTypes.string,\n  children: PropTypes.node,\n  titleProps: PropTypes.node,\n  actionProps: PropTypes.node,\n}\n\nexport default React.memo(DialogSizes)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Card, CardContent, CardMedia, Typography, Chip, IconButton, Link} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ScheduleIcon from '@material-ui/icons/Schedule'\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DialogSizes from '../../components/Dialogs/DialogSizes'\nimport colors from '../../assets/styles/_variables.scss'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: colors.veryDarkDesaturatedBlue,\n    color: colors.white,\n\n    '&.MuiPaper-elevation1': {\n      boxShadow: 'none',\n    },\n  },\n  MuiDialogSizes: {\n    '& .MuiPaper-root': {\n      overflow: 'revert',\n    },\n  },\n  MuiIconButton: {\n    position: 'absolute',\n    right: '-45px',\n    top: 0,\n    padding: 5,\n  },\n  MuiChip: {\n    height: 26,\n    margin: 6,\n    fontSize: '15px',\n    fontWeight: 600,\n    backgroundColor: colors.moderateRed,\n    color: colors.white,\n  },\n  MuiTypography: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\nconst DialogPost = (props) => {\n  const {open, onClose, image, source, title, body, technical, due_date, positions} = props\n  const classes = useStyles()\n\n  const positionsRender =\n    positions && positions.map((position) => <Chip key={position} label={position} className={classes.MuiChip} />)\n  const sourceRender = source ? (\n    <div className=\"source\">\n      Source:{' '}\n      <Link\n        href={source.link}\n        target=\"_blank\"\n        color=\"inherit\"\n        classes={{root: 'text--capitalize color--moderateRed'}}\n        rel=\"noopener\"\n      >\n        {source.name}\n      </Link>\n    </div>\n  ) : null\n\n  const actionDialogRender = (\n    <IconButton onClick={onClose} className={classes.MuiIconButton}>\n      <CloseIcon fontSize=\"large\" htmlColor={colors.white} />\n    </IconButton>\n  )\n\n  return (\n    <div className=\"Post\">\n      <DialogSizes\n        open={open}\n        onClose={onClose}\n        classes={{content: {root: 'bg--veryDarkDesaturatedBlue'}}}\n        actionProps={actionDialogRender}\n        className={classes.MuiDialogSizes}\n        fullWidth\n        disabledTitle\n        disabledAction\n      >\n        <Card className={classes.root}>\n          <CardMedia component=\"img\" alt={title} height=\"140\" image={image} title={title} />\n          <CardContent className=\"padding--left--0 padding--right--0 padding--bottom--8\">\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" classes={{h5: 'text--bold'}}>\n              {title}\n            </Typography>\n            <Typography gutterBottom align=\"justify\" variant=\"body1\" component=\"p\">\n              {body}\n            </Typography>\n            <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.MuiTypography}>\n              <AssignmentOutlinedIcon fontSize=\"small\" classes={{root: 'margin--right--6'}} /> {technical}\n            </Typography>\n            <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.MuiTypography}>\n              <ScheduleIcon fontSize=\"small\" classes={{root: 'margin--right--6'}} /> {due_date}\n            </Typography>\n            <div className=\"position\">\n              <Typography variant=\"body2\" component=\"span\">\n                Position:\n              </Typography>\n              {positionsRender}\n            </div>\n            {sourceRender}\n          </CardContent>\n        </Card>\n      </DialogSizes>\n    </div>\n  )\n}\n\nDialogPost.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  source: PropTypes.object,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  technical: PropTypes.string,\n  due_date: PropTypes.string,\n  positions: PropTypes.array,\n}\n\nexport default DialogPost\n","import React, {useCallback, useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {Container, Tabs, Tab, Box, Grid} from '@material-ui/core'\nimport {Title, Space} from '../../components'\nimport Post from './Post'\nimport DialogPost from './DialogPost'\nimport axios from '../../utils/axios'\n\nReact.memo(Container)\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={1}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n    height: 'auto',\n  },\n  MuiTab: {\n    fontSize: 18,\n  },\n}))\n\nexport default function RecentWork() {\n  const tabs = ['Everything', 'Recent Works', 'Examples']\n  const classes = useStyles()\n  const [state, setState] = useState({\n    open: false,\n    value: 0,\n  })\n  const [projects, setProjects] = useState()\n\n  const handleChange = useCallback((event, value) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        value,\n      }\n    })\n  }, [])\n\n  const onOpenHandler = useCallback(\n    (newState) => () => {\n      setState((prevState) => {\n        return {\n          ...prevState,\n          ...newState,\n          open: true,\n        }\n      })\n    },\n    []\n  )\n\n  const onCloseHandler = useCallback(() => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        open: false,\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    let mounted = true\n\n    const fetchData = () => {\n      axios.get('/api/projects').then((res) => {\n        setProjects(res.data.data)\n      })\n    }\n\n    if (mounted) fetchData()\n\n    return () => {\n      mounted = false\n    }\n  }, [])\n\n  const works = []\n  const examples = []\n  projects &&\n    projects.map((project) => {\n      if (project.type === 'project') works.push(project)\n      if (project.type === 'example') examples.push(project)\n      return null\n    })\n\n  const listTabsRender = tabs.map((tab) => (\n    <Tab\n      key={tab}\n      label={tab}\n      classes={{wrapper: clsx(classes.MuiTab, 'color--white text--bold text--capitalize')}}\n      {...a11yProps(0)}\n    />\n  ))\n  const listProjectsRender =\n    projects &&\n    projects.map((project) => (\n      <Grid key={project.id} item xs={12} sm={6} md={4}>\n        <Post onOpen={onOpenHandler(project)} {...project} />\n      </Grid>\n    ))\n  const listWorks =\n    works.length > 0 &&\n    works.map((project) => (\n      <Grid key={project.id} item xs={12} sm={6} md={4}>\n        <Post onOpen={onOpenHandler(project)} {...project} />\n      </Grid>\n    ))\n  const listExamples =\n    examples.length > 0 &&\n    examples.map((project) => (\n      <Grid key={project.id} item xs={12} sm={6} md={4}>\n        <Post onOpen={onOpenHandler(project)} {...project} />\n      </Grid>\n    ))\n\n  return (\n    <div id=\"Recent-Works\" className={clsx('Recent-Works page-section', classes.root)}>\n      <Container maxWidth=\"md\">\n        <Space height={30} />\n        <Title>Recent Works</Title>\n        <Space height={30} />\n        <Tabs\n          value={state.value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          classes={{indicator: 'bg--softOrange'}}\n        >\n          {listTabsRender}\n        </Tabs>\n        <TabPanel value={state.value} index={0}>\n          <Grid container spacing={3}>\n            {listProjectsRender}\n          </Grid>\n        </TabPanel>\n        <TabPanel value={state.value} index={1}>\n          <Grid container spacing={3}>\n            {listWorks}\n          </Grid>\n        </TabPanel>\n        <TabPanel value={state.value} index={2}>\n          <Grid container spacing={3}>\n            {listExamples}\n          </Grid>\n        </TabPanel>\n      </Container>\n      <DialogPost onClose={onCloseHandler} {...state} />\n    </div>\n  )\n}\n"],"sourceRoot":""}