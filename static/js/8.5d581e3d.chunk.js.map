{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/lab/esm/Timeline/TimelineContext.js","../node_modules/@material-ui/lab/esm/TimelineItem/TimelineItemContext.js","../node_modules/@material-ui/lab/esm/TimelineItem/TimelineItem.js","../node_modules/@material-ui/lab/esm/TimelineOppositeContent/TimelineOppositeContent.js","../node_modules/@material-ui/lab/esm/TimelineSeparator/TimelineSeparator.js","../node_modules/@material-ui/lab/esm/TimelineDot/TimelineDot.js","../node_modules/@material-ui/lab/esm/TimelineConnector/TimelineConnector.js","../node_modules/@material-ui/lab/esm/TimelineContent/TimelineContent.js","../node_modules/@material-ui/lab/esm/Timeline/Timeline.js","views/Experience/index.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","TimelineContext","TimelineItemContext","TimelineItem","_React$useContext$ali","align","hasOppositeContent","forEach","children","child","isMuiElement","Provider","content","oppositeContent","missingOppositeContent","listStyle","position","minHeight","alignLeft","alignRight","flexDirection","alignAlternate","textAlign","flex","padding","TimelineOppositeContent","_React$useContext2$cl","contextClasses","muiName","TimelineSeparator","alignItems","TimelineDot","_props$color","color","_props$variant","variant","alignSelf","borderStyle","borderWidth","borderRadius","boxShadow","shadows","marginTop","marginBottom","defaultGrey","borderColor","palette","grey","backgroundColor","outlinedGrey","contrastText","defaultPrimary","primary","main","outlinedPrimary","defaultSecondary","secondary","outlinedSecondary","TimelineConnector","flexGrow","TimelineContent","Timeline","_props$align","Experience","useState","experiences","setExperiences","useEffect","mounted","axios","get","then","res","data","listExperiencesRendering","length","map","experience","key","Typography","timeline","timelineDot","title","id","height"],"mappings":"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","file":"static/js/8.5d581e3d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TimelineContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TimelineContext.displayName = 'TimelineContext';\n}\n\nexport default TimelineContext;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TimelineItemContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TimelineItemContext.displayName = 'TimelineItemContext';\n}\n\nexport default TimelineItemContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize, isMuiElement } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from './TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      display: 'flex',\n      position: 'relative',\n      minHeight: 70\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {},\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"alternate\"`. */\n    alignAlternate: {\n      '&:nth-child(even)': {\n        flexDirection: 'row-reverse',\n        '& $content': {\n          textAlign: 'right'\n        },\n        '& $oppositeContent': {\n          textAlign: 'left'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if no there isn't TimelineOppositeContent provided. */\n    missingOppositeContent: {\n      '&:before': {\n        content: '\"\"',\n        flex: 1,\n        padding: '6px 16px'\n      }\n    },\n\n    /* Styles applied to the timeline content node. */\n    content: {},\n\n    /* Styles applied to the timeline opposite content node. */\n    oppositeContent: {}\n  };\n};\nvar TimelineItem = /*#__PURE__*/React.forwardRef(function TimelineItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var hasOppositeContent = false;\n  React.Children.forEach(props.children, function (child) {\n    if (isMuiElement(child, ['TimelineOppositeContent'])) {\n      hasOppositeContent = true;\n    }\n  });\n  return /*#__PURE__*/React.createElement(TimelineItemContext.Provider, {\n    value: {\n      classes: {\n        content: classes.content,\n        oppositeContent: classes.oppositeContent\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, classes[\"align\".concat(capitalize(align))], className, !hasOppositeContent && classes.missingOppositeContent),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineItem'\n})(TimelineItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: '6px 16px',\n      marginRight: 'auto',\n      textAlign: 'right',\n      flex: 1\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'left'\n    }\n  };\n};\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default withStyles(styles, {\n  name: 'MuiTimelineOppositeContent'\n})(TimelineOppositeContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 0,\n      alignItems: 'center'\n    }\n  };\n};\nvar TimelineSeparator = /*#__PURE__*/React.forwardRef(function TimelineSeparator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineSeparator.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineSeparator'\n})(TimelineSeparator);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignSelf: 'baseline',\n      borderStyle: 'solid',\n      borderWidth: 2,\n      padding: 4,\n      borderRadius: '50%',\n      boxShadow: theme.shadows[2],\n      marginTop: 8,\n      marginBottom: 8\n    },\n\n    /* Styles applied to the root element if `color=\"grey\"` and `variant=\"default\"`. */\n    defaultGrey: {\n      borderColor: 'transparent',\n      color: theme.palette.grey[50],\n      backgroundColor: theme.palette.grey[400]\n    },\n\n    /* Styles applied to the root element if `color=\"grey\"` and `variant=\"outlined\"`. */\n    outlinedGrey: {\n      boxShadow: 'none',\n      color: theme.palette.grey.contrastText,\n      borderColor: theme.palette.grey[400],\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"` and `variant=\"default\"`. */\n    defaultPrimary: {\n      borderColor: 'transparent',\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    outlinedPrimary: {\n      boxShadow: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"` and `variant=\"default\"`. */\n    defaultSecondary: {\n      borderColor: 'transparent',\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    outlinedSecondary: {\n      boxShadow: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.palette.secondary.main\n    }\n  };\n};\nvar TimelineDot = /*#__PURE__*/React.forwardRef(function TimelineDot(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'grey' : _props$color,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"\".concat(variant).concat(capitalize(color))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineDot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The dot can have a different colors.\n   */\n  color: PropTypes.oneOf(['grey', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The dot can appear filled or outlined.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineDot'\n})(TimelineDot);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      width: 2,\n      backgroundColor: theme.palette.grey[400],\n      flexGrow: 1\n    }\n  };\n};\nvar TimelineConnector = /*#__PURE__*/React.forwardRef(function TimelineConnector(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineConnector'\n})(TimelineConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: 1,\n      padding: '6px 16px'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    }\n  };\n};\nvar TimelineContent = /*#__PURE__*/React.forwardRef(function TimelineContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.content, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineContent'\n})(TimelineContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from './TimelineContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '6px 16px',\n      flexGrow: 1\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {},\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {},\n\n    /* Styles applied to the root element if `align=\"alternate\"`. */\n    alignAlternate: {}\n  };\n};\nvar Timeline = /*#__PURE__*/React.forwardRef(function Timeline(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'left' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(TimelineContext.Provider, {\n    value: {\n      align: align\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: clsx(classes.root, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Timeline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The position where the timeline's content should appear.\n   */\n  align: PropTypes.oneOf(['alternate', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimeline'\n})(Timeline);","import React, {useState, useEffect} from 'react'\nimport {Container, Typography} from '@material-ui/core'\nimport {Title, Space} from '../../components'\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent,\n} from '@material-ui/lab'\nimport './Experience.scss'\nimport axios from '../../utils/axios'\n\nconst Experience = () => {\n  const [experiences, setExperiences] = useState()\n\n  useEffect(() => {\n    let mounted = true\n\n    const fetchData = () => {\n      axios.get('/api/experiences').then((res) => {\n        setExperiences(res.data.data)\n      })\n    }\n\n    if (mounted) fetchData()\n\n    return () => {\n      mounted = false\n    }\n  }, [])\n\n  if (!experiences) return null\n  const listExperiencesRendering =\n    experiences.length > 0 &&\n    experiences.map((experience) => {\n      return (\n        <TimelineItem key={experience.key}>\n          <TimelineOppositeContent>\n            <Typography className=\"Roboto-Black color--softOrange\">{experience.timeline}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot {...experience.timelineDot} />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography className=\"Roboto-Black color--white\">{experience.title}</Typography>\n            <Typography className=\"color--white\">{experience.content}</Typography>\n          </TimelineContent>\n        </TimelineItem>\n      )\n    })\n  return (\n    <div id=\"Experience\" className=\"Experience page-section\">\n      <Container maxWidth=\"md\">\n        <Title>Experience</Title>\n        <Space height={30} />\n        <div className=\"content\">\n          <div className=\"wrapper\">\n            <div className=\"rounded\">\n              <Timeline align=\"alternate\">{listExperiencesRendering}</Timeline>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default Experience\n"],"sourceRoot":""}